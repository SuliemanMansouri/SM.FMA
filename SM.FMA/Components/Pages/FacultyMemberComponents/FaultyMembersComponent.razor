@page "/facultyMembers"
@inject IFacultyMemberService TeacherService
@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar
@inject IDialogService DialogService
@rendermode InteractiveServer
@using Dialogs

<h3>أعضاء هيئة التدريس</h3>


@if (teachers == null)
{
    <div class="d-flex justify-center align-center ma-auto">
        <MudProgressCircular Color="Color.Default" Indeterminate="true" />
    </div>
}
else
{
    <MudTable Items="teachers" Hover="true" SortLabel="Sort By" Elevation="0" AllowUnsorted="false">
        <ToolBarContent>
            <MudSpacer />
            <MudButton Color="Color.Primary"
                       Variant="Variant.Filled"
                       Size="Size.Medium"
                       StartIcon="@Icons.Material.Filled.Add"
                       OnClick="() => NavigateToUpsertForm()">إضافة</MudButton>
        </ToolBarContent>
        <HeaderContent>
            <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<FacultyMemberDto, object>(x=>x.Id)">رقم</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<FacultyMemberDto, object>(x=>x.Name)">إسم</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<FacultyMemberDto, object>(x=>x.Email)">بريد إلكتروني</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<FacultyMemberDto, object>(x=>x.PhoneNumber)">رقم الهاتف</MudTableSortLabel></MudTh>
            <MudTh>العمليات</MudTh>
        </HeaderContent>

        <RowTemplate>
            <MudTd DataLabel="رقم">@context.Id</MudTd>
            <MudTd DataLabel="Name">@context.Name</MudTd>
            <MudTd DataLabel="Email">@context.Email</MudTd>
            <MudTd DataLabel="Phone Number" Style="direction:ltr">@context.PhoneNumber</MudTd>
            <MudTd>
                <MudButton Color="Color.Primary" Variant="Variant.Outlined"
                           OnClick="() => NavigateToUpsertForm(context)">تعديل</MudButton>

                <MudButton Color="Color.Secondary" Variant="Variant.Outlined"
                           OnClick="()=> DeleteFacultyMember(context)">حذف</MudButton>
            </MudTd>
        </RowTemplate>

        <PagerContent>
            <MudTablePager PageSizeOptions="new int[]{50, 100}" />
        </PagerContent>
    </MudTable>
}

@code {

    private FacultyMemberDto[]? teachers;

    protected override async Task OnInitializedAsync()
    {
        teachers = (await TeacherService.GetFacultyMembersAsync()).ToArray();
    }

    private void NavigateToUpsertForm()
    {
        NavigationManager.NavigateTo($"/FacultyMemberComponents/EditFacultyMember");
    }

    private void NavigateToUpsertForm(object context)
    {
        if (context is FacultyMemberDto facultyMemberDto)
        {
            NavigationManager.NavigateTo($"/FacultyMemberComponents/EditFacultyMember/{facultyMemberDto.Id}");
        }

    }

    private async void EditFacultyMember(FacultyMemberDto facultyMemberDto)
    {

        teachers = (await TeacherService.GetFacultyMembersAsync()).ToArray();

    }

    private async Task DeleteFacultyMember(FacultyMemberDto facultyMemberDto)
    {
        var parameters = new DialogParameters
        {
            { "ContentText", "هل أنت متأكد من عملية الحذف؟" },
            { "ConfirmationText", "حذف" },
            { "CancelText", "إلغاء" },
            { "Color", Color.Error }
        };

        var _dialogOptions = new DialogOptions() { MaxWidth = MaxWidth.ExtraLarge, BackdropClick = false };

        var msg = $"سيتم حذف عضو هيئة التدريس: {facultyMemberDto.Name}";
        var result = await DialogService.Show<ConfirmDelete>(msg, parameters, _dialogOptions).Result;
        if (!result.Canceled)
        {
            await TeacherService.DeleteFacultyMemberAsync(facultyMemberDto.Id);
            teachers = (await TeacherService.GetFacultyMembersAsync()).ToArray();
            Snackbar.Configuration.PositionClass = Defaults.Classes.Position.TopCenter;
            Snackbar.Add("تم الحذف بنجاح ", Severity.Success);
        }


    }
}

